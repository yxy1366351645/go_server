// Generated by github.com/davyxu/gosproto/sprotogen
// DO NOT EDIT!

package teenpatti

import (
	"reflect"

	"fmt"
)

type BalanceInfo struct {
	Type int `sproto:"integer,0,name=Type"`

	Last_operate_time string `sproto:"string,1,name=Last_operate_time"`

	Balance int `sproto:"integer,2,name=Balance"`

	Player_id int `sproto:"integer,3,name=Player_id"`

	Sid int `sproto:"integer,4,name=Sid"`
}

func (self *BalanceInfo) String() string { return fmt.Sprintf("%+v", *self) }

type PlayerInfo struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Player_id int `sproto:"integer,1,name=Player_id"`

	Nickname string `sproto:"string,2,name=Nickname"`

	Head_id int `sproto:"integer,3,name=Head_id"`

	Head_url string `sproto:"string,4,name=Head_url"`

	Sex int `sproto:"integer,5,name=Sex"`

	Balance_total int `sproto:"integer,6,name=Balance_total"`

	Balance []*BalanceInfo `sproto:"struct,7,array,name=Balance"`

	Avatar int `sproto:"integer,8,name=Avatar"`

	Fb_avatar string `sproto:"string,9,name=Fb_avatar"`
}

func (self *PlayerInfo) String() string { return fmt.Sprintf("%+v", *self) }

type SeatState struct {
	Seat int `sproto:"integer,0,name=Seat"`

	State int `sproto:"integer,1,name=State"`
}

func (self *SeatState) String() string { return fmt.Sprintf("%+v", *self) }

type Winlost struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Winlost int `sproto:"integer,1,name=Winlost"`

	Fee int `sproto:"integer,2,name=Fee"`

	Player_id int `sproto:"integer,3,name=Player_id"`
}

func (self *Winlost) String() string { return fmt.Sprintf("%+v", *self) }

type CardsGroup struct {
	Type int `sproto:"integer,0,name=Type"`

	Cards []int `sproto:"integer,1,array,name=Cards"`
}

func (self *CardsGroup) String() string { return fmt.Sprintf("%+v", *self) }

type SeatCards struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Cardinfo *CardsGroup `sproto:"struct,1,name=Cardinfo"`

	Player_info *PlayerInfo `sproto:"struct,2,name=Player_info"`

	Is_check bool `sproto:"boolean,3,name=Is_check"`

	Compared_seats []int `sproto:"integer,4,array,name=Compared_seats"`

	Is_fold bool `sproto:"boolean,5,name=Is_fold"`
}

func (self *SeatCards) String() string { return fmt.Sprintf("%+v", *self) }

type Seat_Bet struct {
	Seat int `sproto:"integer,0,name=Seat"`

	History []int `sproto:"integer,1,array,name=History"`

	Total_bet int `sproto:"integer,2,name=Total_bet"`
}

func (self *Seat_Bet) String() string { return fmt.Sprintf("%+v", *self) }

type NormalReq struct {
	Bet_num int `sproto:"integer,0,name=Bet_num"`

	Choose int `sproto:"integer,1,name=Choose"`
}

func (self *NormalReq) String() string { return fmt.Sprintf("%+v", *self) }

type PlayerSendGiftReq struct {
	From_player_id int `sproto:"integer,0,name=From_player_id"`

	To_player_id int `sproto:"integer,1,name=To_player_id"`

	Gift_id int `sproto:"integer,2,name=Gift_id"`
}

func (self *PlayerSendGiftReq) String() string { return fmt.Sprintf("%+v", *self) }

type GameEndEvent struct {
	Player_map []*PlayerInfo `sproto:"struct,0,array,name=Player_map"`

	Seat_state_map []*SeatState `sproto:"struct,1,array,name=Seat_state_map"`

	Player_cards_map []*SeatCards `sproto:"struct,2,array,name=Player_cards_map"`

	Winlost_map []*Winlost `sproto:"struct,3,array,name=Winlost_map"`
}

func (self *GameEndEvent) String() string { return fmt.Sprintf("%+v", *self) }

type Seat_Type struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Type int `sproto:"integer,1,name=Type"`
}

func (self *Seat_Type) String() string { return fmt.Sprintf("%+v", *self) }

type SeatStateEvent struct {
	Player_map []*PlayerInfo `sproto:"struct,0,array,name=Player_map"`

	Seat_state_map []*SeatState `sproto:"struct,1,array,name=Seat_state_map"`

	Player_cards_map []*SeatCards `sproto:"struct,2,array,name=Player_cards_map"`

	History *GameEndEvent `sproto:"struct,3,name=History"`

	Seat_type *Seat_Type `sproto:"struct,4,name=Seat_type"`

	Next_bank_seat int `sproto:"integer,5,name=Next_bank_seat"`

	Deal_id string `sproto:"string,6,name=Deal_id"`

	Seat_count int `sproto:"integer,7,name=Seat_count"`

	Desk_config []int `sproto:"integer,8,array,name=Desk_config"`

	Bet_history []int `sproto:"integer,9,array,name=Bet_history"`

	Seat_bet_map []*Seat_Bet `sproto:"struct,10,array,name=Seat_bet_map"`

	S_player_win int `sproto:"integer,11,name=S_player_win"`
}

func (self *SeatStateEvent) String() string { return fmt.Sprintf("%+v", *self) }

type GameStartEvent struct {
	Seat_bet_map []*Seat_Bet `sproto:"struct,0,array,name=Seat_bet_map"`

	Seat_state_map []*SeatState `sproto:"struct,1,array,name=Seat_state_map"`

	Total_bet int `sproto:"integer,2,name=Total_bet"`

	Next_bank_seat int `sproto:"integer,3,name=Next_bank_seat"`

	Deal_id string `sproto:"string,4,name=Deal_id"`

	Player_cards_map []*SeatCards `sproto:"struct,5,array,name=Player_cards_map"`

	S_player_win int `sproto:"integer,6,name=S_player_win"`
}

func (self *GameStartEvent) String() string { return fmt.Sprintf("%+v", *self) }

type NormalEvent struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Player_id int `sproto:"integer,1,name=Player_id"`

	Bet_num int `sproto:"integer,2,name=Bet_num"`

	Choose int `sproto:"integer,3,name=Choose"`

	Cardinfo *CardsGroup `sproto:"struct,4,name=Cardinfo"`

	Compare_seat int `sproto:"integer,5,name=Compare_seat"`

	Bet_type int `sproto:"integer,6,name=Bet_type"`

	Fold_type int `sproto:"integer,7,name=Fold_type"`
}

func (self *NormalEvent) String() string { return fmt.Sprintf("%+v", *self) }

type CompareResultEvent struct {
	Win_seat []int `sproto:"integer,0,array,name=Win_seat"`

	Player_cards_map []*SeatCards `sproto:"struct,1,array,name=Player_cards_map"`

	Compare_seats []int `sproto:"integer,2,array,name=Compare_seats"`
}

func (self *CompareResultEvent) String() string { return fmt.Sprintf("%+v", *self) }

type PlayerSendGiftEvent struct {
	From_seat int `sproto:"integer,0,name=From_seat"`

	From_player_id int `sproto:"integer,1,name=From_player_id"`

	To_seat int `sproto:"integer,2,name=To_seat"`

	To_player_id int `sproto:"integer,3,name=To_player_id"`

	Gift_id int `sproto:"integer,4,name=Gift_id"`

	Gift_cost int `sproto:"integer,5,name=Gift_cost"`
}

func (self *PlayerSendGiftEvent) String() string { return fmt.Sprintf("%+v", *self) }

type Gift struct {
	Id int `sproto:"integer,0,name=Id"`

	Cost int `sproto:"integer,1,name=Cost"`
}

func (self *Gift) String() string { return fmt.Sprintf("%+v", *self) }

type SendGiftListEvent struct {
	Gift []*Gift `sproto:"struct,0,array,name=Gift"`
}

func (self *SendGiftListEvent) String() string { return fmt.Sprintf("%+v", *self) }

type PunishEvent struct {
	Seat int `sproto:"integer,0,name=Seat"`

	Player_id int `sproto:"integer,1,name=Player_id"`

	Punish int `sproto:"integer,2,name=Punish"`
}

func (self *PunishEvent) String() string { return fmt.Sprintf("%+v", *self) }

var SProtoStructs = []reflect.Type{

	reflect.TypeOf((*BalanceInfo)(nil)).Elem(),         // 57824290
	reflect.TypeOf((*PlayerInfo)(nil)).Elem(),          // 2891014180
	reflect.TypeOf((*SeatState)(nil)).Elem(),           // 1499635777
	reflect.TypeOf((*Winlost)(nil)).Elem(),             // 1668939892
	reflect.TypeOf((*CardsGroup)(nil)).Elem(),          // 3347421508
	reflect.TypeOf((*SeatCards)(nil)).Elem(),           // 121145429
	reflect.TypeOf((*Seat_Bet)(nil)).Elem(),            // 2950350545
	reflect.TypeOf((*NormalReq)(nil)).Elem(),           // 2178968516
	reflect.TypeOf((*PlayerSendGiftReq)(nil)).Elem(),   // 2390564847
	reflect.TypeOf((*GameEndEvent)(nil)).Elem(),        // 4120601333
	reflect.TypeOf((*Seat_Type)(nil)).Elem(),           // 56513699
	reflect.TypeOf((*SeatStateEvent)(nil)).Elem(),      // 65806055
	reflect.TypeOf((*GameStartEvent)(nil)).Elem(),      // 310900436
	reflect.TypeOf((*NormalEvent)(nil)).Elem(),         // 2823625780
	reflect.TypeOf((*CompareResultEvent)(nil)).Elem(),  // 2919802019
	reflect.TypeOf((*PlayerSendGiftEvent)(nil)).Elem(), // 914615734
	reflect.TypeOf((*Gift)(nil)).Elem(),                // 679033322
	reflect.TypeOf((*SendGiftListEvent)(nil)).Elem(),   // 2388503205
	reflect.TypeOf((*PunishEvent)(nil)).Elem(),         // 3366784562
}

var SProtoEnumValue = map[string]map[int32]string{}
